# docker build -t johnbensnyder/byteps_worker_tensorpack_py2:0.0.0-a -f Dockerfile.worker.tensorpack .

FROM bytepsimage/worker_tensorflow

RUN apt-get update && \
	apt-get install -y zip

ENV BYTEPS_BASE_PATH /usr/local
ENV BYTEPS_PATH $BYTEPS_BASE_PATH/byteps
ENV BYTEPS_GIT_LINK https://github.com/bytedance/byteps

# Configure the build for our CUDA configuration.
ARG CUDA=10.0
ARG CUDNN_MAJOR_VERSION=7
ARG BAZEL_VERSION=0.15.0

ENV CI_BUILD_PYTHON python
ENV LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda/lib64:$LD_LIBRARY_PATH
ENV TF_NEED_CUDA 1
ENV TF_CUDA_COMPUTE_CAPABILITIES=7.0
ENV TF_CUDA_VERSION=${CUDA}
ENV TF_CUDNN_VERSION=${CUDNN_MAJOR_VERSION}

RUN pip uninstall -y tensorflow byteps

RUN ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1 \
	LD_LIBRARY_PATH=/usr/local/cuda/lib64/stubs:${LD_LIBRARY_PATH} && \
    && echo "/usr/local/cuda/lib64/stubs" > /etc/ld.so.conf.d/z-cuda-stubs.conf \
    && ldconfig

RUN wget https://github.com/bazelbuild/bazel/releases/download/0.15.0/bazel-0.15.0-installer-linux-x86_64.sh && \
	chmod +x bazel-0.15.0-installer-linux-x86_64.sh && \
	./bazel-0.15.0-installer-linux-x86_64.sh

RUN git clone -b r1.12_roi_align http://www.github.com/johnbensnyder/tensorflow
RUN cd tensorflow
RUN tools/ci_build/builds/configured GPU
RUN bazel build --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package
RUN ./bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg
RUN pip install /tmp/tensorflow_pkg/tensorflow-1.12.3-cp27-cp27m-linux_x86_64.whl


# Install BytePS
ARG BYTEPS_NCCL_LINK=shared
RUN cd $BYTEPS_PATH &&\
    BYTEPS_WITHOUT_PYTORCH=1 BYTEPS_WITHOUT_MXNET=1 python setup.py install &&\
    BYTEPS_WITHOUT_PYTORCH=1 BYTEPS_WITHOUT_MXNET=1 python setup.py bdist_wheel

RUN git clone -b nhwc https://github.com/aws-samples/mask-rcnn-tensorflow/ && \
	cd mask-rcnn-tensorflow && \
	python setup.py install
